#
# Limit the request rate to 50 requests per second per IP address to prevent DDoS attack
#
limit_req_zone $binary_remote_addr zone=mylimit:10m rate=50r/s;

#
# Set a response status code that is returned to rejected requests
#
limit_req_status 429;

server {
    listen 80;
    root /usr/share/nginx/html;
    index index.html;

    # Enable gzip compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml;
    gzip_vary on;

    # Cache settings for static files
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
        expires 365d;
        add_header Cache-Control "public, no-transform, immutable";
        access_log off;
    }

    # Enable rate limiting to prevent Brute force attacks, DoS and DDoS attacks, and Web scraping
    location / {
        # Apply rate limiting here for the root path only
        limit_req zone=mylimit burst=100 nodelay;
        try_files $uri $uri/ /index.html =404;
    }

    location /cdn {
        # No rate limiting here for CDN requests
        alias /var/www/cdn;
        # Add cache headers for CDN content
        expires 365d;
        add_header Cache-Control "public, no-transform, immutable";
    }

    # Handle /g/collect requests with CORS support and no rate limiting
    location /g/collect {
        # Allow requests from any origin
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'POST, GET, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Content-Type';
        
        # If it's an OPTIONS request, return 204 (no content)
        if ($request_method = 'OPTIONS') {
            return 204;
        }

        # Apply rate limiting for other methods if necessary
        limit_req zone=mylimit burst=100 nodelay;
        
        # Your backend logic or proxy settings can go here
    }
}

# Redirect http to https
server {
    listen 80;
    server_name _;
    return 301 https://$host$request_uri;
}
